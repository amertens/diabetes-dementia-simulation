source("~/diabetes-dementia-simulation/0_config.R", echo=TRUE)
#load functions
source(paste0(here::here(),"/functions/0_diabetes_dementia_functions.R"))
source("~/diabetes-dementia-simulation/0_config.R", echo=TRUE)
rm(list=ls())
source(paste0(here::here(),"/0_config.R"))
source(paste0(here::here(),"/0_ltmle_Estimate_update.R"))
source(paste0(here::here(),"/functions/0_ltmle_Estimate_update.R"))
source(paste0(here::here(),"/functions/0_simulation_functions.R"))
source(paste0(here::here(),"/functions/0_simulation_cleaning_functions.R"))
cc <- fread(paste0(here::here(),"/data/coefficients.txt"))
source("~/diabetes-dementia-simulation/simulation_protective/calculate_truth.R", echo=TRUE)
rm(list=ls())
library(here)
source(here::here("0_config.R"))
source(paste0(here::here(),"/0_ltmle_Estimate_update.R"))
rm(list=ls())
library(here)
source(here::here("0_config.R"))
source(paste0(here::here(),"/functions/0_ltmle_Estimate_update.R"))
source(paste0(here::here(),"/functions/0_simulation_functions.R"))
library(parallel)
library(doParallel)
registerDoParallel(cores=64)
d_wide_list <- readRDS(file=here("data/simulated_data_list_null.RDS"))
rm(list=ls())
library(here)
source(paste0(here::here(),"0_config.R"))
rm(list=ls())
library(here)
source(paste0(here::here(),"/0_config.R"))
source(paste0(here::here(),"/functions/0_ltmle_Estimate_update.R"))
source(paste0(here::here(),"/functions/0_simulation_functions.R"))
library(parallel)
library(doParallel)
registerDoParallel(cores=64)
d_wide_list <- readRDS(file=here("data/simulated_data_list_null.RDS"))
rm(list=ls())
library(here)
source(paste0(here::here(),"/0_config.R"))
source(paste0(here::here(),"/functions/0_ltmle_Estimate_update.R"))
source(paste0(here::here(),"/functions/0_simulation_functions.R"))
library(parallel)
library(doParallel)
registerDoParallel(cores=64)
d_wide_list <- readRDS(file=paste0(here::here(),"data/simulated_data_list_null.RDS"))
rm(list=ls())
library(here)
source(paste0(here::here(),"/0_config.R"))
source(paste0(here::here(),"/functions/0_ltmle_Estimate_update.R"))
source(paste0(here::here(),"/functions/0_simulation_functions.R"))
library(parallel)
library(doParallel)
registerDoParallel(cores=64)
d_wide_list <- readRDS(file=paste0(here::here(),"data/simulated_data_list_null.RDS"))
d_wide_list <- readRDS(file=paste0(here::here(),"/data/simulated_data_list_null.RDS"))
d_wide_list <- d_wide_list[1:200]
gc()
#--------------------------------------------------------------------------
# GLM
#--------------------------------------------------------------------------
resdf_noDetQ_ic_glm <- foreach(i = 1:length(d_wide_list), .combine = 'bind_rows', .errorhandling = 'remove') %dopar% {
res <- NULL
try(res <- run_ltmle_glmnet(d_wide_list[[i]], resdf=NULL, Qint=FALSE, det.Q=FALSE, varmethod = "ic",N_time=11, SL.library="glm"))
return(res)
}
rm(list=ls())
library(here)
source(paste0(here::here(),"/0_config.R"))
source(paste0(here::here(),"/functions/0_ltmle_Estimate_update.R"))
source(paste0(here::here(),"/functions/0_simulation_functions.R"))
library(parallel)
library(doParallel)
detectCores()
registerDoParallel(cores=64)
resdf_noDetQ_ic_glm <- NULL
for(i in 1:length(d_wide_list)){
res <- NULL
try(res <- run_ltmle_glmnet(d_wide_list[[i]], resdf=NULL, Qint=FALSE, det.Q=FALSE, varmethod = "ic",N_time=11, SL.library="glm"))
resdf_noDetQ_ic_glm <- bind_rows(resdf_noDetQ_ic_glm, res)
}
d_wide_list <- readRDS(file=paste0(here::here(),"/data/simulated_data_list_null.RDS"))
d_wide_list <- d_wide_list[1:200]
gc()
#TEMP! No parallelization:
resdf_noDetQ_ic_glm <- NULL
for(i in 1:length(d_wide_list)){
res <- NULL
try(res <- run_ltmle_glmnet(d_wide_list[[i]], resdf=NULL, Qint=FALSE, det.Q=FALSE, varmethod = "ic",N_time=11, SL.library="glm"))
resdf_noDetQ_ic_glm <- bind_rows(resdf_noDetQ_ic_glm, res)
}
resdf_noDetQ_ic_glm
resdf_noDetQ_ic_glm <- foreach(i = 1:length(d_wide_list), .combine = 'bind_rows', .errorhandling = 'remove') %dopar% {
res <- NULL
try(res <- run_ltmle_glmnet(d_wide_list[[i]], resdf=NULL, Qint=FALSE, det.Q=FALSE, varmethod = "ic",N_time=11, SL.library="glm"))
return(res)
}
saveRDS(resdf_noDetQ_ic_glm, paste0(here::here(),"/sim_res/null/sim_res_noDetQ_ic_glm.RDS"))
resdf_noDetQ_ic_glm
resdf_ic_glm <- foreach(i = 1:length(d_wide_list), .combine = 'bind_rows', .errorhandling = 'remove') %dopar% {
res <- NULL
try(res <- run_ltmle_glmnet(d_wide_list[[i]], resdf=NULL, Qint=FALSE, det.Q=TRUE, varmethod = "ic",N_time=11, SL.library="glm"))
return(res)
}
#---------------------------------------------------------
# manuscript sim results: Null sim
#---------------------------------------------------------
files <- dir(path=paste0(here::here(),"/sim_res/null/"), pattern = "*.RDS")
files
files <- dir(path=paste0(here::here(),"/sim_res/null/"), pattern = "*.RDS")
files
#load bootstrap
boot_iter_files <- dir(path=paste0(here::here(),"/sim_res/null//bootstrap/"), pattern = "*.RDS")
boot_iter_files
length(boot_iter_files)
trueRR=1
trueRD=0
iptw=T
original_sim_res_null <- calc_sim_performance(files=files, boot_iter_files=boot_iter_files, trueRR=1, trueRD=0, iptw=T)
source(here::here("0_config.R"))
source(paste0(here::here(),"/0_ltmle_Estimate_update.R"))
rm(list=ls())
source(here::here("0_config.R"))
source(paste0(here::here(),"/functions/0_ltmle_Estimate_update.R"))
source(paste0(here::here(),"/functions/0_simulation_functions.R"))
source(paste0(here::here(),"/functions/0_simulation_cleaning_functions.R"))
trueRR=1
trueRD=0
iptw=T
original_sim_res_null <- calc_sim_performance(files=files, boot_iter_files=boot_iter_files, trueRR=1, trueRD=0, iptw=T)
#---------------------------------------------------------
# manuscript sim results: Null sim
#---------------------------------------------------------
files <- dir(path=paste0(here::here(),"/sim_res/null/"), pattern = "*.RDS")
# #NOTE: check which files are missing from the old pipeline:
# old_files <- dir(path=paste0(here::here(),"/sim_res_old/"), pattern = "*.RDS")
# old_files <- old_files[grepl("old_null_sim_res_",old_files)]
# files_temp[!(files_temp %in% old_files)]
# old_files[!(old_files %in% files_temp)]
#load bootstrap
boot_iter_files <- dir(path=paste0(here::here(),"/sim_res/null//bootstrap/"), pattern = "*.RDS")
length(boot_iter_files)
trueRR=1
trueRD=0
iptw=T
original_sim_res_null <- calc_sim_performance(files=files, boot_iter_files=boot_iter_files, trueRR=1, trueRD=0, iptw=T)
source("~/diabetes-dementia-simulation/functions/0_simulation_cleaning_functions.R", echo=TRUE)
original_sim_res_null <- calc_sim_performance(files=files, filepath="/sim_res/null/", boot_iter_files=boot_iter_files, trueRR=1, trueRD=0, iptw=T)
original_sim_res_null$perf_tab_diff
original_sim_res_null <- calc_sim_performance(files=files, filepath="/sim_res/null/", boot_iter_files=boot_iter_files, trueRD=0, iptw=T)
source("~/diabetes-dementia-simulation/functions/0_simulation_cleaning_functions.R", echo=TRUE)
original_sim_res_null <- calc_sim_performance(files=files, filepath="/sim_res/null/", boot_iter_files=boot_iter_files, trueRD=0, iptw=T)
original_sim_res_null
original_sim_res_null$filenames
truth <- readRDS(paste0(here::here(),"/data/sim_res_truth.RDS"))
truth
trueRD <- truth[10,2]
trueRD
saveRDS(sim_res_protective,  file=paste0(here::here(),"/results/sim_performance_results_protective.RDS"))
rm(list=ls())
library(here)
source(paste0(here::here(),"/0_config.R"))
source(paste0(here::here(),"/functions/0_ltmle_Estimate_update.R"))
source(paste0(here::here(),"/functions/0_simulation_functions.R"))
library(parallel)
library(doParallel)
registerDoParallel(cores=64)
d_wide_list <- readRDS(file=paste0(here::here(),"/data/simulated_data_list_null.RDS"))
d_wide_list <- d_wide_list[1:200]
gc()
resdf_ic_glm <- foreach(i = 1:length(d_wide_list), .combine = 'bind_rows', .errorhandling = 'remove') %dopar% {
res <- NULL
try(res <- run_ltmle_glmnet(d_wide_list[[i]], resdf=NULL, Qint=FALSE, det.Q=TRUE, varmethod = "ic",N_time=11, SL.library="glm"))
return(res)
}
saveRDS(resdf_ic_glm, paste0(here::here(),"/sim_res/null/sim_res_ic_glm.RDS"))
resdf_Qint_noDetQ_ic_glm <- foreach(i = 1:length(d_wide_list), .combine = 'bind_rows', .errorhandling = 'remove') %dopar% {
res <- NULL
try(res <- run_ltmle_glmnet(d_wide_list[[i]], resdf=NULL, Qint=FALSE, det.Q=FALSE, varmethod = "ic",N_time=11, SL.library="glm"))
return(res)
}
saveRDS(resdf_Qint_noDetQ_ic_glm, paste0(here::here(),"/sim_res/null/sim_res_Qint_noDetQ_ic_glm.RDS"))
resdf_Qint_ic_glm <- foreach(i = 1:length(d_wide_list), .combine = 'bind_rows', .errorhandling = 'remove') %dopar% {
res <- NULL
try(res <- run_ltmle_glmnet(d_wide_list[[i]], resdf=NULL, Qint=FALSE, det.Q=TRUE, varmethod = "ic",N_time=11, SL.library="glm"))
return(res)
}
saveRDS(resdf_Qint_ic_glm, paste0(here::here(),"/sim_res/null/sim_res_Qint_ic_glm.RDS"))
#--------------------------------------------------------------------------
#Random forest
#--------------------------------------------------------------------------
int.start.time <- Sys.time()
resdf_RF <- foreach(i = 1:length(d_wide_list), .combine = 'bind_rows') %dopar% {
res <- run_ltmle_glmnet(d_wide_list[[i]], varmethod = "ic", resdf=NULL, SL.library="SL.randomForest", N_time=11, override_function=SuperLearner_override_RF)
}
run_ltmle_glmnet
#--------------------------------------------------------------------------
#Random forest
#--------------------------------------------------------------------------
int.start.time <- Sys.time()
resdf_RF <- foreach(i = 1:length(d_wide_list), .combine = 'bind_rows') %dopar% {
res <- run_ltmle_glmnet(d_wide_list[[i]], varmethod = "ic", resdf=NULL, SL.library="SL.randomForest", det.Q=F, N_time=11, override_function=SuperLearner_override_RF)
}
int.end.time <- Sys.time()
difftime(int.end.time, int.start.time, units="mins")
resdf_RF
gc()
saveRDS(resdf_RF, paste0(here::here(),"/sim_res/null/sim_res_rf_ic.RDS"))
int.start.time <- Sys.time()
resdf_RF_detQ <- foreach(i = 1:length(d_wide_list), .combine = 'bind_rows') %dopar% {
res <- run_ltmle_glmnet(d_wide_list[[i]], varmethod = "ic", resdf=NULL, SL.library="SL.randomForest", det.Q=T, N_time=11, override_function=SuperLearner_override_RF)
}
int.end.time <- Sys.time()
difftime(int.end.time, int.start.time, units="mins")
gc()
saveRDS(resdf_RF_detQ, paste0(here::here(),"/sim_res/null/sim_res_rf_ic.RDS"))
rm(list=ls())
library(here)
source(here::here("0_config.R"))
source(paste0(here::here(),"/0_ltmle_Estimate_update.R"))
source(paste0(here::here(),"/functions/0_ltmle_Estimate_update.R"))
source(paste0(here::here(),"/functions/0_simulation_functions.R"))
#lasso
int.start.time <- Sys.time()
resdf_DetQ_ic <- foreach(i = 1:length(d_wide_list), .combine = 'bind_rows', .errorhandling = 'remove') %dopar% {
res <- NULL
try(res <- run_ltmle_glmnet(d_wide_list[[i]], resdf=NULL, Qint=FALSE, det.Q =FALSE, varmethod = "ic"))
return(res)
}
gc()
d_wide_list <- readRDS(file=here("data/simulated_data_list.RDS"))
d_wide_list <- d_wide_list[1:200]
gc()
#lasso
int.start.time <- Sys.time()
resdf_DetQ_ic <- foreach(i = 1:length(d_wide_list), .combine = 'bind_rows', .errorhandling = 'remove') %dopar% {
res <- NULL
try(res <- run_ltmle_glmnet(d_wide_list[[i]], resdf=NULL, Qint=FALSE, det.Q =FALSE, varmethod = "ic"))
return(res)
}
int.end.time <- Sys.time()
difftime(int.end.time, int.start.time, units="mins")
saveRDS(resdf_DetQ_ic, paste0(here::here(),"/data/sim_res_ic.RDS"))
resdf_DetQ_ic <- foreach(i = 1:length(d_wide_list), .combine = 'bind_rows', .errorhandling = 'remove') %dopar% {
res <- NULL
try(res <- run_ltmle_glmnet(d_wide_list[[i]], resdf=NULL, Qint=FALSE, det.Q =TRUE, varmethod = "ic"))
return(res)
}
rm(list=ls())
library(here)
source(here::here("0_config.R"))
source(paste0(here::here(),"/functions/0_ltmle_Estimate_update.R"))
source(paste0(here::here(),"/functions/0_simulation_functions.R"))
library(parallel)
library(doParallel)
registerDoParallel(cores=64)
gc()
d_wide_list <- readRDS(file=here("data/simulated_data_list.RDS"))
d_wide_list <- d_wide_list[1:200]
gc()
resdf_DetQ_ic <- foreach(i = 1:length(d_wide_list), .combine = 'bind_rows', .errorhandling = 'remove') %dopar% {
res <- NULL
try(res <- run_ltmle_glmnet(d_wide_list[[i]], resdf=NULL, Qint=FALSE, det.Q =TRUE, varmethod = "ic"))
return(res)
}
saveRDS(resdf_DetQ_ic, paste0(here::here(),"/sim_res/protective/sim_res_DetQ_ic.RDS"))
resdf_DetQ_ic <- foreach(i = 1:length(d_wide_list), .combine = 'bind_rows', .errorhandling = 'remove') %dopar% {
res <- NULL
try(res <- run_ltmle_glmnet(d_wide_list[[i]], resdf=NULL, Qint=TRUE, det.Q =FALSE, varmethod = "ic"))
return(res)
}
rm(list=ls())
library(here)
source(here::here("0_config.R"))
source(paste0(here::here(),"/functions/0_ltmle_Estimate_update.R"))
source(paste0(here::here(),"/functions/0_simulation_functions.R"))
library(parallel)
library(doParallel)
registerDoParallel(cores=64)
gc()
d_wide_list <- readRDS(file=here("data/simulated_data_list.RDS"))
d_wide_list <- d_wide_list[1:200]
gc()
resdf_DetQ_ic <- foreach(i = 1:length(d_wide_list), .combine = 'bind_rows', .errorhandling = 'remove') %dopar% {
res <- NULL
try(res <- run_ltmle_glmnet(d_wide_list[[i]], resdf=NULL, Qint=TRUE, det.Q =FALSE, varmethod = "ic"))
return(res)
}
saveRDS(resdf_DetQ_ic, paste0(here::here(),"/sim_res/protective/sim_res_Qint_ic.RDS"))
resdf_DetQ_ic <- foreach(i = 1:length(d_wide_list), .combine = 'bind_rows', .errorhandling = 'remove') %dopar% {
res <- NULL
try(res <- run_ltmle_glmnet(d_wide_list[[i]], resdf=NULL, Qint=TRUE, det.Q =TRUE, varmethod = "ic"))
return(res)
}
rm(list=ls())
library(here)
source(here::here("0_config.R"))
source(paste0(here::here(),"/functions/0_ltmle_Estimate_update.R"))
source(paste0(here::here(),"/functions/0_simulation_functions.R"))
library(parallel)
library(doParallel)
registerDoParallel(cores=64)
gc()
d_wide_list <- readRDS(file=here("data/simulated_data_list.RDS"))
d_wide_list <- d_wide_list[1:200]
gc()
resdf_DetQ_ic <- foreach(i = 1:length(d_wide_list), .combine = 'bind_rows', .errorhandling = 'remove') %dopar% {
res <- NULL
try(res <- run_ltmle_glmnet(d_wide_list[[i]], resdf=NULL, Qint=TRUE, det.Q =TRUE, varmethod = "ic"))
return(res)
}
rm(list=ls())
library(here)
source(here::here("0_config.R"))
source(paste0(here::here(),"/functions/0_ltmle_Estimate_update.R"))
source(paste0(here::here(),"/functions/0_simulation_functions.R"))
library(parallel)
library(doParallel)
registerDoParallel(cores=64)
gc()
d_wide_list <- readRDS(file=here("data/simulated_data_list.RDS"))
d_wide_list <- d_wide_list[1:200]
gc()
rm(list=ls())
library(here)
source(here::here("0_config.R"))
source(paste0(here::here(),"/functions/0_ltmle_Estimate_update.R"))
source(paste0(here::here(),"/functions/0_simulation_functions.R"))
library(parallel)
library(doParallel)
registerDoParallel(cores=64)
gc()
d_wide_list <- readRDS(file=here("data/simulated_data_list.RDS"))
d_wide_list <- d_wide_list[1:200]
gc()
resdf_Qint_DetQ_ic <- foreach(i = 1:length(d_wide_list), .combine = 'bind_rows', .errorhandling = 'remove') %dopar% {
res <- NULL
try(res <- run_ltmle_glmnet(d_wide_list[[i]], resdf=NULL, Qint=TRUE, det.Q =TRUE, varmethod = "ic"))
return(res)
}
saveRDS(resdf_Qint_DetQ_ic, paste0(here::here(),"/sim_res/protective/sim_res_Qint_DetQ_ic.RDS"))
resdf_Qint_ic <- foreach(i = 1:length(d_wide_list), .combine = 'bind_rows', .errorhandling = 'remove') %dopar% {
res <- NULL
try(res <- run_ltmle_glmnet(d_wide_list[[i]], resdf=NULL, Qint=TRUE, det.Q =FALSE, varmethod = "ic"))
return(res)
}
rm(list=ls())
library(here)
source(here::here("0_config.R"))
source(paste0(here::here(),"/functions/0_ltmle_Estimate_update.R"))
source(paste0(here::here(),"/functions/0_simulation_functions.R"))
library(parallel)
library(doParallel)
registerDoParallel(cores=64)
gc()
d_wide_list <- readRDS(file=here("data/simulated_data_list.RDS"))
d_wide_list <- d_wide_list[1:200]
gc()
resdf_Qint_DetQ_ic <- foreach(i = 1:length(d_wide_list), .combine = 'bind_rows', .errorhandling = 'remove') %dopar% {
res <- NULL
try(res <- run_ltmle_glmnet(d_wide_list[[i]], resdf=NULL, Qint=TRUE, det.Q =TRUE, varmethod = "ic"))
return(res)
}
saveRDS(resdf_Qint_DetQ_ic, paste0(here::here(),"/sim_res/protective/sim_res_Qint_DetQ_ic.RDS"))
d <- read.csv("C:/Users/andre/Downloads/msam_adverse_tab.csv")
head(d)
install.packages("funtimes")
#install.packages("funtimes")
library(funtimes)
head(d)
notrend_test(d[,2])
d[,2]
library(funtimes)
notrend_test(d[,2])
d[,2]
apply(d[,-1], 2, function(x) notrend_test(x)$p.value)
class(d[,2])
?notrend_test
set.seed(777)
n <- 100
Time <- c(1:n)
X0 <- arima.sim(list(order = c(1, 0, 0), ar = 0.5), n = n, n.start = 100, sd = 0.5)
X1 <- 2*Time/n + X0
X2 <- 2*(Time/n)^0.5 + X0
X3 <- 0.5*(Time - n/2)/n - 6*((Time - n/2)/n)^2 + X0
X <- as.data.frame(cbind(X0, X1, X2, X3))
notrend_test(X[,1])
class(X)
class(d)
class(X[,1])
class(d[,1])
class(d[,2])
notrend_test(d[,3])
X
d
notrend_test(d[,4])
#install.packages("funtimes")
library(trend)
install.packages("trend")
library(trend)
cs.test(d[,4])
head(d)
?cs.test
d <- read.csv("C:/Users/andre/Downloads/msam_adverse_tab.csv")
head(d)
d
cs.test(d[,1])
cs.test(d[,2])
cs.test(d[,3])
cs.test(d[,4])
cs.test(d[,5])
cs.test(d[,6])
cs.test(d[,7])
mk.test(d[,2])
mk.test(d[,3])
mk.test(d[,4])
mk.test(d[,5])
mk.test(d[,6])
mk.test(d[,7])
d[,2]
d[,3]
d[,4]
cs.test(d[,2])
cs.test(d[,3])
cs.test(d[,4])
cs.test(d[,5])
cs.test(d[,6])
cs.test(d[,7])
mk.test(d[,2])
mk.test(d[,3])
mk.test(d[,4])
mk.test(d[,5])
mk.test(d[,6])
mk.test(d[,7])
head(d)
ggplot(d, aes(x=Follow.up.week)) + geom_smooth(aes(y=Fever))
#install.packages("trend")
library(tidyverse)
#https://cran.r-project.org/web/packages/funtimes/vignettes/trendtests.html
d <- read.csv("C:/Users/andre/Downloads/msam_adverse_tab.csv")
head(d)
#install.packages("trend")
library(tidyverse)
library(trend)
cs.test(d[,2])
cs.test(d[,3])
cs.test(d[,4])
cs.test(d[,5])
cs.test(d[,6])
cs.test(d[,7])
mk.test(d[,2])
mk.test(d[,3])
mk.test(d[,4])
mk.test(d[,5])
mk.test(d[,6])
mk.test(d[,7])
ggplot(d, aes(x=Follow.up.week)) + geom_smooth(aes(y=Fever))
head(d)
ggplot(d, aes(x=Follow.up.week)) + geom_smooth(aes(y=Fever)) + geom_smooth(aes(y=Diarrhea))
d %>% pivot_longer(!Follow.up.week, names_to = "event", values_to = "count")
ggplot(plotdf, aes(x=Follow.up.week)) +
geom_smooth(aes(y=Fever), method="lm") +
facet_wrap(~event)
plotdf <- d %>% pivot_longer(!Follow.up.week, names_to = "event", values_to = "count")
ggplot(plotdf, aes(x=Follow.up.week)) +
geom_smooth(aes(y=Fever), method="lm") +
facet_wrap(~event)
ggplot(plotdf, aes(x=Follow.up.week)) +
geom_smooth(aes(y=count), method="lm") +
facet_wrap(~event)
ggplot(plotdf, aes(x=Follow.up.week)) +
geom_smooth(aes(y=count), method="lm") +
geom_point(aes(y=count)) +
facet_wrap(~event)
cs.test(d[,2])
cs.test(d[,3])
cs.test(d[,4])
cs.test(d[,5])
cs.test(d[,6])
cs.test(d[,7])
mk.test(d[,2])
mk.test(d[,3])
mk.test(d[,4])
mk.test(d[,5])
mk.test(d[,6])
mk.test(d[,7])
trueRD <- truth[10,2]
truth <- readRDS(paste0(here::here(),"/data/sim_res_truth.RDS"))
trueRD <- truth[10,2]
trueRD
trueRD <- truth[10,1]
trueRD
trueRD <- truth[10,3]
trueRD
rm(list=ls())
source(here::here("0_config.R"))
source(paste0(here::here(),"/0_ltmle_Estimate_update.R"))
source(paste0(here::here(),"/simulation study/0_simulation_functions.R"))
source(paste0(here::here(),"/simulation study/0_simulation_cleaning_functions.R"))
library(knitr)
library(xtable)
library(kableExtra)
files <- dir(path=paste0(here::here(),"/sim_res/protective/"), pattern = "*.RDS")
files
res_protective <- calc_sim_performance(WD=paste0(here::here(),"/sim_res/protective/"), files=files, boot_iter_files=NULL, trueRR=0.5148661, trueRD= -0.009683665, iptw=T )
res_diff <- res_protective$perf_tab_diff
source(paste0(here::here(),"/0_ltmle_Estimate_update.R"))
source(paste0(here::here(),"/simulation study/0_simulation_functions.R"))
source(paste0(here::here(),"/simulation study/0_simulation_cleaning_functions.R"))
library(knitr)
library(xtable)
library(kableExtra)
